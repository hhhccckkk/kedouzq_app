package com.hck.zhuanqian.ui;import org.json.JSONObject;import android.R.interpolator;import android.content.DialogInterface;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import com.handmark.pulltorefresh.library.PullToRefreshListView;import com.hck.httpserver.JsonHttpResponseHandler;import com.hck.httpserver.RequestParams;import com.hck.zhuanqian.R;import com.hck.zhuanqian.adapter.MessageAdpter;import com.hck.zhuanqian.data.MessageData;import com.hck.zhuanqian.data.MyData;import com.hck.zhuanqian.net.Request;import com.hck.zhuanqian.util.AppManager;import com.hck.zhuanqian.util.JsonUtils;import com.hck.zhuanqian.util.LogUtil;import com.hck.zhuanqian.view.CustomAlertDialog;import com.hck.zhuanqian.view.MyToast;import com.hck.zhuanqian.view.Pdialog;public class MessageActivity extends BaseActivity {    private PullToRefreshListView listView;    private MessageAdpter adpter;    private View errorView;    private MessageData msgData;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_message);        initTitle("我的消息");        initView();        getMsg();        setListener();    }    private void initView() {        listView = (PullToRefreshListView) findViewById(R.id.msgList);        errorView = LayoutInflater.from(this).inflate(R.layout.error_view, null);    }    private void getMsg() {        Pdialog.showDialog(this, "获取消息中", true);        params = new RequestParams();        params.put("id", MyData.getData().getUserBean().getId() + "");        Request.getMsg(params, new JsonHttpResponseHandler() {            @Override            public void onFailure(Throwable error, String content) {                super.onFailure(error, content);                MyToast.showCustomerToast("获取消息失败");                listView.setEmptyView(errorView);                LogUtil.D(content);            }            @Override            public void onSuccess(int statusCode, JSONObject response) {                super.onSuccess(statusCode, response);                LogUtil.D("onSuccess:" + response.toString());                try {                    isOK = response.getBoolean("isok");                    if (isOK) {                        msgData = JsonUtils.parse(response.toString(), MessageData.class);                        updateMsg();                    } else {                        if (adpter == null) {                            listView.setEmptyView(errorView);                        }                    }                } catch (Exception e) {                    MyToast.showCustomerToast("获取消息失败");                }            }            @Override            public void onFinish(String url) {                super.onFinish(url);                Pdialog.hiddenDialog();            }        });    }    private void updateMsg() {        if (msgData != null && msgData.getMsgBeans() != null) {            adpter = new MessageAdpter(this, msgData.getMsgBeans());            listView.setAdapter(adpter);        }    }    private void setListener() {        listView.setOnItemClickListener(new OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {                showDialog(msgData.getMsgBeans().get(--arg2).getId(), arg2);            }        });    }    public void showDialog(final long id, final int pos) {        if (isFinishing()) {            return;        }        CustomAlertDialog dialog = new CustomAlertDialog(this);        dialog.setCancelable(false);        dialog.setCanceledOnTouchOutside(false);        dialog.setLeftText("取消");        dialog.setRightText("删除");        dialog.setTitle("提示");        dialog.setMessage("删除该消息吗?");        dialog.setOnRightListener(new DialogInterface.OnClickListener() {            @Override            public void onClick(DialogInterface dialog, int which) {                deleteMsg(id, pos);            }        });        if (!isFinishing() && dialog != null) {            dialog.show();        }    }    private void deleteMsg(Long id, final int pos) {        Pdialog.showDialog(this, "删除中...", true);        params = new RequestParams();        params.put("mid", id + "");        Request.deleteMsg(params, new JsonHttpResponseHandler() {            public void onFinish(String url) {                Pdialog.hiddenDialog();            };            @Override            public void onFailure(Throwable error, String content) {                super.onFailure(error, content);                MyToast.showCustomerToast("删除失败");            }            @Override            public void onSuccess(int statusCode, JSONObject response) {                super.onSuccess(statusCode, response);                try {                    isOK = response.getBoolean("isok");                    if (isOK) {                        MyToast.showCustomerToast("删除成功");                        adpter.updateMsg(pos);                    } else {                        MyToast.showCustomerToast("删除失败");                    }                } catch (Exception e) {                    MyToast.showCustomerToast("删除失败");                }            }        });    }}